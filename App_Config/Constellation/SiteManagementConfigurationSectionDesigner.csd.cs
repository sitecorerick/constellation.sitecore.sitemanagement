//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Constellation.Sitecore.SiteManagement
{
    
    
    /// <summary>
    /// The SiteManagementConfigurationSection Configuration Section.
    /// </summary>
    public partial class SiteManagementConfigurationSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SiteManagementConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SiteManagementConfigurationSectionSectionName = "constellationSiteManagement";
        
        /// <summary>
        /// Gets the SiteManagementConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection Instance
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.SiteManagementConfigurationSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region TransSiteRoles Property
        /// <summary>
        /// The XML name of the <see cref="TransSiteRoles"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TransSiteRolesPropertyName = "transSiteRoles";
        
        /// <summary>
        /// Gets or sets the roles used by authors that have control of content across all sites
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The roles used by authors that have control of content across all sites")]
        [global::System.ComponentModel.DisplayNameAttribute("Examples: \"All Site News Author\", \"All Site News Approver\"")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.TransSiteRolesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.RoleElementCollection TransSiteRoles
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleElementCollection)(base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.TransSiteRolesPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.TransSiteRolesPropertyName] = value;
            }
        }
        #endregion
        
        #region SiteBlueprints Property
        /// <summary>
        /// The XML name of the <see cref="SiteBlueprints"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SiteBlueprintsPropertyName = "siteBlueprints";
        
        /// <summary>
        /// Gets or sets the SiteBlueprints.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SiteBlueprints.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.SiteBlueprintsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.SiteBluePrintConfigurationElementCollection SiteBlueprints
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.SiteBluePrintConfigurationElementCollection)(base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.SiteBlueprintsPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.SiteBlueprintsPropertyName] = value;
            }
        }
        #endregion
        
        #region TargetSystems Property
        /// <summary>
        /// The XML name of the <see cref="TargetSystems"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TargetSystemsPropertyName = "targetSystems";
        
        /// <summary>
        /// Gets or sets the TargetSystems.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The TargetSystems.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.TargetSystemsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection TargetSystems
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection)(base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.TargetSystemsPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.SiteManagementConfigurationSection.TargetSystemsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// A collection of RoleConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class RoleElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RoleConfigurationElementPropertyName = "role";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Constellation.Sitecore.SiteManagement.Configuration.RoleElementCollection.RoleConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Constellation.Sitecore.SiteManagement.Configuration.RoleElementCollection.RoleConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement)(element)).RoleName;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement this[int index]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="roleName">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement this[object roleName]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement)(base.BaseGet(roleName)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="role">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement role)
        {
            base.BaseAdd(role);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="role">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement role)
        {
            base.BaseRemove(this.GetElementKey(role));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement GetItemAt(int index)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="roleName">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement GetItemByKey(string roleName)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement)(base.BaseGet(((object)(roleName)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// The RoleConfigurationElement Configuration Element.
    /// </summary>
    public partial class RoleConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region RoleName Property
        /// <summary>
        /// The XML name of the <see cref="RoleName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RoleNamePropertyName = "roleName";
        
        /// <summary>
        /// Gets or sets the RoleName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RoleName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.RoleNamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string RoleName
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.RoleNamePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.RoleNamePropertyName] = value;
            }
        }
        #endregion
        
        #region MemberOfTheseRoles Property
        /// <summary>
        /// The XML name of the <see cref="MemberOfTheseRoles"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string MemberOfTheseRolesPropertyName = "memberOfTheseRoles";
        
        /// <summary>
        /// Gets or sets a comma-delimited list of roles. The newly created role will become a member of these roles
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("A comma-delimited list of roles. The newly created role will become a member of t" +
            "hese roles")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.MemberOfTheseRolesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string MemberOfTheseRoles
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.MemberOfTheseRolesPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.MemberOfTheseRolesPropertyName] = value;
            }
        }
        #endregion
        
        #region AccessRights Property
        /// <summary>
        /// The XML name of the <see cref="AccessRights"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AccessRightsPropertyName = "accessRights";
        
        /// <summary>
        /// Gets or sets the AccessRights.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AccessRights.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.AccessRightsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElementCollection AccessRights
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElementCollection)(base[global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.AccessRightsPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.RoleConfigurationElement.AccessRightsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// A collection of SiteBlueprintConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Constellation.Sitecore.SiteManagement.Configuration.SiteBluePrintConfigurationElementCollection.SiteBlueprintConfigurationElementPropertyName)]
    public partial class SiteBluePrintConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SiteBlueprintConfigurationElementPropertyName = "siteBluePrint";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Constellation.Sitecore.SiteManagement.Configuration.SiteBluePrintConfigurationElementCollection.SiteBlueprintConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Constellation.Sitecore.SiteManagement.Configuration.SiteBluePrintConfigurationElementCollection.SiteBlueprintConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement this[int index]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement this[object name]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="siteBluePrint">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement siteBluePrint)
        {
            base.BaseAdd(siteBluePrint);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="siteBluePrint">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement siteBluePrint)
        {
            base.BaseRemove(this.GetElementKey(siteBluePrint));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement GetItemAt(int index)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement GetItemByKey(string name)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// The SiteBlueprintConfigurationElement Configuration Element.
    /// </summary>
    public partial class SiteBlueprintConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement.NamePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region SystemFolders Property
        /// <summary>
        /// The XML name of the <see cref="SystemFolders"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SystemFoldersPropertyName = "systemFolders";
        
        /// <summary>
        /// Gets or sets the SystemFolders.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SystemFolders.")]
        [global::System.ComponentModel.TypeConverter(typeof(global::System.Configuration.WhiteSpaceTrimStringConverter))]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement.SystemFoldersPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=true)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.SystemFoldersConfigurationElementCollection SystemFolders
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.SystemFoldersConfigurationElementCollection)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement.SystemFoldersPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SiteBlueprintConfigurationElement.SystemFoldersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// The SystemFolderConfigurationElement Configuration Element.
    /// </summary>
    public partial class SystemFolderConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Key Property
        /// <summary>
        /// The XML name of the <see cref="Key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string KeyPropertyName = "key";
        
        /// <summary>
        /// Gets or sets the Key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.KeyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Key
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.KeyPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.KeyPropertyName] = value;
            }
        }
        #endregion
        
        #region FolderName Property
        /// <summary>
        /// The XML name of the <see cref="FolderName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string FolderNamePropertyName = "folderName";
        
        /// <summary>
        /// Gets or sets the FolderName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The FolderName.")]
        [global::System.ComponentModel.TypeConverter(typeof(global::System.Configuration.WhiteSpaceTrimStringConverter))]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.FolderNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string FolderName
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.FolderNamePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.FolderNamePropertyName] = value;
            }
        }
        #endregion
        
        #region TemplateID Property
        /// <summary>
        /// The XML name of the <see cref="TemplateID"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TemplateIDPropertyName = "templateID";
        
        /// <summary>
        /// Gets or sets the TemplateID.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The TemplateID.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.TemplateIDPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="A87A00B1-E6DB-45AB-8B54-636FEC3B5523")]
        public virtual global::System.Guid TemplateID
        {
            get
            {
                return ((global::System.Guid)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.TemplateIDPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.TemplateIDPropertyName] = value;
            }
        }
        #endregion
        
        #region ChildTemplateID Property
        /// <summary>
        /// The XML name of the <see cref="ChildTemplateID"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ChildTemplateIDPropertyName = "childTemplateID";
        
        /// <summary>
        /// Gets or sets the ChildTemplateID.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ChildTemplateID.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ChildTemplateIDPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="A87A00B1-E6DB-45AB-8B54-636FEC3B5523")]
        public virtual global::System.Guid ChildTemplateID
        {
            get
            {
                return ((global::System.Guid)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ChildTemplateIDPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ChildTemplateIDPropertyName] = value;
            }
        }
        #endregion
        
        #region ParentItemPath Property
        /// <summary>
        /// The XML name of the <see cref="ParentItemPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ParentItemPathPropertyName = "parentItemPath";
        
        /// <summary>
        /// Gets or sets the ParentItemPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ParentItemPath.")]
        [global::System.ComponentModel.TypeConverter(typeof(global::System.Configuration.WhiteSpaceTrimStringConverter))]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ParentItemPathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="/sitecore/content")]
        public virtual string ParentItemPath
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ParentItemPathPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ParentItemPathPropertyName] = value;
            }
        }
        #endregion
        
        #region ReadOnly Property
        /// <summary>
        /// The XML name of the <see cref="ReadOnly"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ReadOnlyPropertyName = "readOnly";
        
        /// <summary>
        /// Gets or sets the ReadOnly.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ReadOnly.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ReadOnlyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool ReadOnly
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ReadOnlyPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.ReadOnlyPropertyName] = value;
            }
        }
        #endregion
        
        #region Icon Property
        /// <summary>
        /// The XML name of the <see cref="Icon"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string IconPropertyName = "icon";
        
        /// <summary>
        /// Gets or sets the Icon.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Icon.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.IconPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="applications/16x16/folder.png")]
        public virtual string Icon
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.IconPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.IconPropertyName] = value;
            }
        }
        #endregion
        
        #region SiteRoles Property
        /// <summary>
        /// The XML name of the <see cref="SiteRoles"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SiteRolesPropertyName = "siteLevelRoles";
        
        /// <summary>
        /// Gets or sets the SiteRoles.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The SiteRoles.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.SiteRolesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.RoleElementCollection SiteRoles
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.RoleElementCollection)(base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.SiteRolesPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement.SiteRolesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// A collection of AccessRightConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class AccessRightConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AccessRightConfigurationElementPropertyName = "accessRight";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElementCollection.AccessRightConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElementCollection.AccessRightConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement)(element)).AccessRight;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement this[int index]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="accessRight">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement this[object accessRight]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement)(base.BaseGet(accessRight)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="accessRight">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement accessRight)
        {
            base.BaseAdd(accessRight);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="accessRight">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement accessRight)
        {
            base.BaseRemove(this.GetElementKey(accessRight));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement GetItemAt(int index)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="accessRight">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement GetItemByKey(global::Constellation.Sitecore.SiteManagement.Configuration.ItemAccessRight accessRight)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement)(base.BaseGet(((object)(accessRight)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// The AccessRightConfigurationElement Configuration Element.
    /// </summary>
    public partial class AccessRightConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AccessRight Property
        /// <summary>
        /// The XML name of the <see cref="AccessRight"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AccessRightPropertyName = "accessRight";
        
        /// <summary>
        /// Gets or sets item access right
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("Item access right")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.AccessRightPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual global::Constellation.Sitecore.SiteManagement.Configuration.ItemAccessRight AccessRight
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.ItemAccessRight)(base[global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.AccessRightPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.AccessRightPropertyName] = value;
            }
        }
        #endregion
        
        #region PropagationType Property
        /// <summary>
        /// The XML name of the <see cref="PropagationType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PropagationTypePropertyName = "propagationType";
        
        /// <summary>
        /// Gets or sets the PropagationType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The PropagationType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.PropagationTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=global::Sitecore.Security.AccessControl.PropagationType.Any)]
        public virtual global::Sitecore.Security.AccessControl.PropagationType PropagationType
        {
            get
            {
                return ((global::Sitecore.Security.AccessControl.PropagationType)(base[global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.PropagationTypePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.PropagationTypePropertyName] = value;
            }
        }
        #endregion
        
        #region AccessPermission Property
        /// <summary>
        /// The XML name of the <see cref="AccessPermission"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AccessPermissionPropertyName = "accessPermission";
        
        /// <summary>
        /// Gets or sets the AccessPermission.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AccessPermission.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.AccessPermissionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=global::Sitecore.Security.AccessControl.AccessPermission.Allow)]
        public virtual global::Sitecore.Security.AccessControl.AccessPermission AccessPermission
        {
            get
            {
                return ((global::Sitecore.Security.AccessControl.AccessPermission)(base[global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.AccessPermissionPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.AccessRightConfigurationElement.AccessPermissionPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// A collection of SystemFolderConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class SystemFoldersConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SystemFolderConfigurationElementPropertyName = "systemFolder";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Constellation.Sitecore.SiteManagement.Configuration.SystemFoldersConfigurationElementCollection.SystemFolderConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Constellation.Sitecore.SiteManagement.Configuration.SystemFoldersConfigurationElementCollection.SystemFolderConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement)(element)).Key;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement this[int index]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement this[object key]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement)(base.BaseGet(key)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="systemFolder">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement systemFolder)
        {
            base.BaseAdd(systemFolder);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="systemFolder">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement systemFolder)
        {
            base.BaseRemove(this.GetElementKey(systemFolder));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement GetItemAt(int index)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement GetItemByKey(string key)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.SystemFolderConfigurationElement)(base.BaseGet(((object)(key)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// The TargetSystemConfigurationElement Configuration Element.
    /// </summary>
    public partial class TargetSystemConfigurationElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region SystemName Property
        /// <summary>
        /// The XML name of the <see cref="SystemName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SystemNamePropertyName = "systemName";
        
        /// <summary>
        /// Gets or sets the system name
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The system name")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.SystemNamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string SystemName
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.SystemNamePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.SystemNamePropertyName] = value;
            }
        }
        #endregion
        
        #region HostNameMask Property
        /// <summary>
        /// The XML name of the <see cref="HostNameMask"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HostNameMaskPropertyName = "hostNameMask";
        
        /// <summary>
        /// Gets or sets the host name mask, used when creating site definitions. Use $site to represent the site name portion of the mask.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The host name mask, used when creating site definitions. Use $site to represent t" +
            "he site name portion of the mask.")]
        [global::System.ComponentModel.TypeConverter(typeof(global::System.Configuration.WhiteSpaceTrimStringConverter))]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.HostNameMaskPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string HostNameMask
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.HostNameMaskPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.HostNameMaskPropertyName] = value;
            }
        }
        #endregion
        
        #region AllowDebug Property
        /// <summary>
        /// The XML name of the <see cref="AllowDebug"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AllowDebugPropertyName = "allowDebug";
        
        /// <summary>
        /// Gets or sets the allow debug flag for a site. Used when creating site definitions
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The allow debug flag for a site. Used when creating site definitions")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.AllowDebugPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool AllowDebug
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.AllowDebugPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.AllowDebugPropertyName] = value;
            }
        }
        #endregion
        
        #region CacheHtml Property
        /// <summary>
        /// The XML name of the <see cref="CacheHtml"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CacheHtmlPropertyName = "cacheHtml";
        
        /// <summary>
        /// Gets or sets the cache html flag for a site. Used when creating site definitions
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The cache html flag for a site. Used when creating site definitions")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.CacheHtmlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool CacheHtml
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.CacheHtmlPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.CacheHtmlPropertyName] = value;
            }
        }
        #endregion
        
        #region HtmlCacheSize Property
        /// <summary>
        /// The XML name of the <see cref="HtmlCacheSize"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HtmlCacheSizePropertyName = "htmlCacheSize";
        
        /// <summary>
        /// Gets or sets the html cache size for a site. Used when creating site definitions. Default is 25MB
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The html cache size for a site. Used when creating site definitions. Default is 2" +
            "5MB")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.HtmlCacheSizePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="25MB")]
        public virtual string HtmlCacheSize
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.HtmlCacheSizePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.HtmlCacheSizePropertyName] = value;
            }
        }
        #endregion
        
        #region EnablePreview Property
        /// <summary>
        /// The XML name of the <see cref="EnablePreview"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EnablePreviewPropertyName = "enablePreview";
        
        /// <summary>
        /// Gets or sets the enable preview flag for a site. Used when creating site definitions
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The enable preview flag for a site. Used when creating site definitions")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnablePreviewPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool EnablePreview
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnablePreviewPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnablePreviewPropertyName] = value;
            }
        }
        #endregion
        
        #region EnableWebEdit Property
        /// <summary>
        /// The XML name of the <see cref="EnableWebEdit"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EnableWebEditPropertyName = "enableWebEdit";
        
        /// <summary>
        /// Gets or sets the EnableWebEdit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The EnableWebEdit.")]
        [global::System.ComponentModel.DisplayNameAttribute("The enable web edit flag for a site. Used when creating site definitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnableWebEditPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool EnableWebEdit
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnableWebEditPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnableWebEditPropertyName] = value;
            }
        }
        #endregion
        
        #region EnableDebugger Property
        /// <summary>
        /// The XML name of the <see cref="EnableDebugger"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string EnableDebuggerPropertyName = "enableDebugger";
        
        /// <summary>
        /// Gets or sets the enable debugger flag for a site. Used when creating site definitions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The enable debugger flag for a site. Used when creating site definitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnableDebuggerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool EnableDebugger
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnableDebuggerPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.EnableDebuggerPropertyName] = value;
            }
        }
        #endregion
        
        #region DisableClientData Property
        /// <summary>
        /// The XML name of the <see cref="DisableClientData"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DisableClientDataPropertyName = "disableClientData";
        
        /// <summary>
        /// Gets or sets the disable client data flag for a site. Used when creating site definitions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The disable client data flag for a site. Used when creating site definitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.DisableClientDataPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool DisableClientData
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.DisableClientDataPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement.DisableClientDataPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Constellation.Sitecore.SiteManagement.Configuration
{
    
    
    /// <summary>
    /// A collection of TargetSystemConfigurationElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class TargetSysteConfigurationElementCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TargetSystemConfigurationElementPropertyName = "targetSystem";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.TargetSystemConfigurationElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.TargetSystemConfigurationElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement)(element)).SystemName;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement this[int index]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="systemName">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement this[object systemName]
        {
            get
            {
                return ((global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement)(base.BaseGet(systemName)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="targetSystem">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement targetSystem)
        {
            base.BaseAdd(targetSystem);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="targetSystem">The <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement targetSystem)
        {
            base.BaseRemove(this.GetElementKey(targetSystem));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement GetItemAt(int index)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> with the specified key.
        /// </summary>
        /// <param name="systemName">The key of the <see cref="global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement GetItemByKey(string systemName)
        {
            return ((global::Constellation.Sitecore.SiteManagement.Configuration.TargetSystemConfigurationElement)(base.BaseGet(((object)(systemName)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region PhysicalFolder Property
        /// <summary>
        /// The XML name of the <see cref="PhysicalFolder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PhysicalFolderPropertyName = "physicalFolder";
        
        /// <summary>
        /// Gets or sets the physical folder path, used when creating site definitions. Use $site to represent the site name portion of the mask.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The physical folder path, used when creating site definitions. Use $site to repre" +
            "sent the site name portion of the mask.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.PhysicalFolderPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="/")]
        public virtual string PhysicalFolder
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.PhysicalFolderPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.PhysicalFolderPropertyName] = value;
            }
        }
        #endregion
        
        #region RootPath Property
        /// <summary>
        /// The XML name of the <see cref="RootPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RootPathPropertyName = "rootPathMask";
        
        /// <summary>
        /// Gets or sets the root path. Used when creating site definitions. Use $site to represent the site name portion of the mask.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The root path. Used when creating site definitions. Use $site to represent the si" +
            "te name portion of the mask.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.RootPathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="/sitecore/content/site/$site")]
        public virtual string RootPath
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.RootPathPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.RootPathPropertyName] = value;
            }
        }
        #endregion
        
        #region StartItem Property
        /// <summary>
        /// The XML name of the <see cref="StartItem"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string StartItemPropertyName = "startItem";
        
        /// <summary>
        /// Gets or sets the start item for a site. Used when creating site definitions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The start item for a site. Used when creating site definitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.StartItemPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="/home")]
        public virtual string StartItem
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.StartItemPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.StartItemPropertyName] = value;
            }
        }
        #endregion
        
        #region Database Property
        /// <summary>
        /// The XML name of the <see cref="Database"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DatabasePropertyName = "database";
        
        /// <summary>
        /// Gets or sets the database for a site. Used when creating site definitions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The database for a site. Used when creating site definitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.DatabasePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="web")]
        public virtual string Database
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.DatabasePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.DatabasePropertyName] = value;
            }
        }
        #endregion
        
        #region Domain Property
        /// <summary>
        /// The XML name of the <see cref="Domain"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string DomainPropertyName = "domain";
        
        /// <summary>
        /// Gets or sets the security domain for a site. Used when creating site definitions.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The security domain for a site. Used when creating site definitions.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.DomainPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="extranet")]
        public virtual string Domain
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.DomainPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.DomainPropertyName] = value;
            }
        }
        #endregion
        
        #region LoginPage Property
        /// <summary>
        /// The XML name of the <see cref="LoginPage"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string LoginPagePropertyName = "loginPage";
        
        /// <summary>
        /// Gets or sets the login page path, used when creating site definitions. Use $site to represent the site name portion of the mask.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The login page path, used when creating site definitions. Use $site to represent " +
            "the site name portion of the mask.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.LoginPagePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="/login.aspx")]
        public virtual string LoginPage
        {
            get
            {
                return ((string)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.LoginPagePropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.LoginPagePropertyName] = value;
            }
        }
        #endregion
        
        #region IncludeFormsRoot Property
        /// <summary>
        /// The XML name of the <see cref="IncludeFormsRoot"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string IncludeFormsRootPropertyName = "includeFormsRoot";
        
        /// <summary>
        /// Gets or sets the FormsRoot attribute. Set it to true if Web Forms for Marketers is installed.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The FormsRoot attribute. Set it to true if Web Forms for Marketers is installed.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.IncludeFormsRootPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool IncludeFormsRoot
        {
            get
            {
                return ((bool)(base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.IncludeFormsRootPropertyName]));
            }
            set
            {
                base[global::Constellation.Sitecore.SiteManagement.Configuration.TargetSysteConfigurationElementCollection.IncludeFormsRootPropertyName] = value;
            }
        }
        #endregion
    }
}
